# 15. Flight Booking System 
# Objective: Book flights with seat selection. 
# Requirements: 
# ÔÇ∑ OOP: Flight class (destination, seats), Passenger class. 
# ÔÇ∑ List: Available seats (e.g., ["A1", "A2", ...]). 
# ÔÇ∑ File Handling: Save bookings to JSON. 
# ÔÇ∑ Exception Handling: Seat already booked. 
# ÔÇ∑ Functions: Book seat, cancel booking. 
# ÔÇ∑ Conditionals: Check seat availability. 
# ÔÇ∑ Loops: Display flight status. 
# ÔÇ∑ Set: Booked seats. 
# ÔÇ∑ Generator: Yield available seats. 
# ÔÇ∑ Decorator: @confirm_booking before finalizing. 


from booking.core import Flight, BookingManager

def main():
    print("‚úàÔ∏è Welcome to Flight Booking System")

    manager = BookingManager()

    # Add flights with seats
    manager.add_flight(Flight("New York"))
    manager.add_flight(Flight("London"))
    manager.add_flight(Flight("Tokyo"))

    while True:
        print("\nMenu:")
        print("1. Show Flights Status")
        print("2. Book a Seat")
        print("3. Cancel Booking")
        print("4. Exit")

        choice = input("Choose an option: ").strip()

        if choice == '1':
            manager.display_flights()

        elif choice == '2':
            name = input("Enter passenger name: ").strip()
            dest = input("Enter flight destination: ").strip()
            seat = input("Enter seat (e.g., A1): ").strip()
            manager.book_seat(name, dest, seat)

        elif choice == '3':
            name = input("Enter passenger name: ").strip()
            dest = input("Enter flight destination: ").strip()
            seat = input("Enter seat to cancel: ").strip()
            manager.cancel_booking(name, dest, seat)

        elif choice == '4':
            print("üëã Goodbye!")
            break

        else:
            print("‚ö†Ô∏è Invalid choice.")

if __name__ == "__main__":
    main()
